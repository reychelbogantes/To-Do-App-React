import React from 'react'
import { Link, useNavigate } from 'react-router-dom';
import { postUsers, GetUsers } from '../../services/Servicios'; 
import './Registro.css'

function Registro() {
    const [username, setUsername] = React.useState("");
  const [email, setEmail] = React.useState("");
  const [password, setPassword] = React.useState(""); 
  const [mensaje, setMensaje] = React.useState("");
  const [tipoMensaje, setTipoMensaje] = React.useState(""); // "success" | "error"

  const navigate = useNavigate();  
    
  async function PostarRegistra() { 
    try {
      // 1Ô∏è‚É£ Verificar que todos los campos est√©n llenos
      if (!username || !email || !password) {
        setTipoMensaje("error");
        setMensaje("‚ö†Ô∏è Todos los campos son obligatorios");
        return;
      }

      // 2Ô∏è‚É£ Verificar que el email tenga un "@"
      if (!email.includes("@")) {
        setTipoMensaje("error");
        setMensaje("‚ö†Ô∏è El correo electr√≥nico no es v√°lido");
        return;
      }

      // 3Ô∏è‚É£ Verificar que la contrase√±a tenga al menos 8 caracteres
      if (password.length < 8) {
        setTipoMensaje("error");
        setMensaje("‚ö†Ô∏è La contrase√±a debe tener al menos 8 caracteres");
        return;
      }

      // 4Ô∏è‚É£ Verificar si el usuario ya existe
      const usuarios = await GetUsers();
      const usernameExiste = usuarios.some((u) => u.username === username);
      const emailExiste = usuarios.some((u) => u.email === email);

      if (usernameExiste) {
        setTipoMensaje("error");
        setMensaje("‚ùå El nombre de usuario ya est√° en uso");
        return;
      }

      if (emailExiste) {
        setTipoMensaje("error");
        setMensaje("‚ùå El correo electr√≥nico ya est√° registrado");
        return;
      }

      // ‚úÖ Si pasa todas las validaciones ‚Üí registrar
      await postUsers(username, email, password);

      setTipoMensaje("success");
      setMensaje("‚úÖ Registro exitoso, redirigiendo...");

      setTimeout(() => {
        navigate("/Login");
      }, 1500);

    } catch (error) {
      setTipoMensaje("error");
      setMensaje("‚ùå Error al registrar, intenta de nuevo");
      console.error(error);
    }
  }

  return (
    <div>
        <div className="form-container">
            <h2>Registro de Usuario</h2>

            <input type="text" id="username" name="username" placeholder='üë§Usuario' required value={username} onChange={e => setUsername(e.target.value)}/><br />
            
            <input type="email" id="email" name="email" placeholder='üìßCorreo Electronico' required value={email} onChange={e => setEmail(e.target.value)} /><br />
            
            <input type="password" id="password" name="password"  placeholder='üîí Contrase√±a' required value={password}  onChange={e => setPassword(e.target.value)} /><br />
            <button onClick={PostarRegistra} type="submit">Registrarse </button>
            <p>¬øYa est√°s registrado? <br />Puedes ir a <Link to="/Login">iniciar sesi√≥n</Link></p>
             
            
             {mensaje && <p className={`mensaje ${tipoMensaje}`}>{mensaje}</p>}

        </div>




    </div>
  )
}

export default Registro